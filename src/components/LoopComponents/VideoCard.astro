---
// src/components/LoopComponents/VideoCard.astro

import { SiteData } from "@/content/SiteData";
import Video from "../Video.astro";
import { Image } from "astro:assets";
const { item } = Astro.props;
const videoSrc = item.data.video;
const posterSrc = item.data.featuredImage;
---
<li
  class="video-card break-inside-avoid mb-[var(--spacing-md)] self-start relative border-radius w-full overflow-hidden shadow-xs transition-shadow"
>
  {videoSrc ? (
    <div class="relative w-full">
      <Video
        src={videoSrc}
        poster={posterSrc}
        controls
        muted
        loop
        playsinline
        class="w-full h-auto object-cover object-center"
      />
      <button
        class="play-button absolute inset-0 flex items-center justify-center bg-heading/50 text-white text-4xl transition-opacity"
        aria-label="Play video"
        style="opacity:1; pointer-events:auto;"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="64"
          height="64"
          viewBox="0 0 24 24"
          fill="currentColor"
          class="w-16 h-16"
        >
          <path d="M8 5v14l11-7z" />
        </svg>
      </button>
    </div>
  ) : posterSrc ? (
    <Image
      src={posterSrc}
      alt={item.data.title || item.slug}
      format="webp"
      loading="lazy"
      fetchpriority="low"
      quality="low"
      class="w-full h-auto object-cover object-center"
    />
  ) : null}

  {item.body && (
    <div
      class="flex justify-start items-center px-[var(--spacing-md)] italic text-center bg-primary text-bg"
    >
      <p class="text-xl m-0 py-[var(--spacing-lg)]">"{item.body}"</p>
    </div>
  )}
</li>

<script is:inline client:load>
  document.querySelectorAll('.video-card').forEach(card => {
    const video = card.querySelector('video');
    const btn = card.querySelector('.play-button');
    if (!video || !btn) return;

    btn.addEventListener('click', () => {
      video.play();
    });

    video.addEventListener('play', () => {
      btn.style.opacity = '0';
      btn.style.pointerEvents = 'none';   // let clicks pass through
    });
    video.addEventListener('pause', () => {
      btn.style.opacity = '1';
      btn.style.pointerEvents = 'auto';   // re-enable overlay clicks
    });
    video.addEventListener('ended', () => {
      btn.style.opacity = '1';
      btn.style.pointerEvents = 'auto';
    });
  });
</script>
