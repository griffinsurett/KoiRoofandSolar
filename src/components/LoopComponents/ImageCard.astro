---
// ImageCard.astro
import { Image } from "astro:assets";
import Heading from "../Heading";

// now destructure collectionName as well
const { item, collectionName, HasPage } = Astro.props;

const effectiveHasPage =
  item.data.hasPage !== undefined ? item.data.hasPage : HasPage;
const { title, featuredImage } = item.data;

// Determine the image source
let imageSrc = featuredImage
  ? typeof featuredImage === "string"
    ? featuredImage
    : featuredImage
  : null;
---
<li class="relative group w-full h-auto lg:h-[45vh] overflow-hidden shadow hover:shadow-lg transition-shadow">
  {effectiveHasPage ? (
    <a
      href={`/${collectionName}/${item.slug}`}
      class="block w-full h-full relative"
    >
      {imageSrc && (
        <Image
          src={imageSrc}
          alt={title}
          format="webp"
          loading="lazy"
          fetchpriority="low"
          quality="low"
          class="w-full h-full object-cover object-center transform transition-transform duration-300 ease-in-out group-hover:scale-105"
        />
      )}
      <div class="absolute bottom-0 left-0 p-[var(--spacing-md)] text-bg">
        <Heading tagName="h3" class="h3 text-bg">{title}</Heading>
      </div>
    </a>
  ) : (
    <div class="block w-full h-full relative">
      {imageSrc && (
        <Image
          src={imageSrc}
          alt={title}
          format="webp"
          loading="lazy"
          fetchpriority="low"
          quality="low"
          class="w-full h-full object-cover object-center transform transition-transform duration-300 ease-in-out group-hover:scale-105"
        />
      )}
      <div class="absolute bottom-0 left-0 p-[var(--spacing-md)] text-bg">
        <Heading tagName="h3" class="h3 text-bg">{title}</Heading>
      </div>
    </div>
  )}
</li>
