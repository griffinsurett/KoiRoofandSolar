---
// src/layouts/SEO.astro
const {
  title,
  description,
  image,
  keywords,
  canonicalUrl,
  robots,
  siteName,
  ogType,
  crawl = true,
} = Astro.props;

// Use a fallback value if ogType is falsy
const finalOgType = ogType || "website";

// Determine a domain for your site. In a real-world app, you might fetch this from an environment variable.
const domain = "koiroofandsolar-1nu38.kinsta.page";

// If canonicalUrl is not explicitly provided, build it using the current path:
const finalCanonicalUrl = canonicalUrl || `https://${domain}${Astro.url.pathname}`;

console.log("Canonical URL:", finalCanonicalUrl);
console.log("OG type:", finalOgType);

---
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>{title}</title>
<meta name="description" content={description} />
{finalCanonicalUrl && <link rel="canonical" href={finalCanonicalUrl} />}
<!-- {robots && <meta name="robots" content={robots} />} -->
<meta name="robots" content="index,follow" />
{keywords && Array.isArray(keywords) && keywords.length > 0 && (
  <meta name="keywords" content={keywords.join(", ")} />
)}

<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image.src} />
<meta property="og:type" content={finalOgType} />
<meta property="og:site_name" content={siteName} />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={image.src} />
<slot name="structuredData" />
